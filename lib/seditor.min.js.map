{"version":3,"sources":["seditor.js"],"names":["global","factory","exports","module","define","amd","SEditor","this","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","i","item","length","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","html","replace","getPasteText","e","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","pasteHtml","docSplitHtml","split","getPasteImgs","result","items","value","type","test","push","getAsFile","config","menus","debug","showLinkImg","uploadImgMaxSize","uploadImgShowBase64","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","_typeof","Symbol","iterator","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","Vm","tagName","arguments","undefined","children","node","document","createElement","eventType","toLowerCase","addEventListener","setAttribute","forEach","child","Array","isArray","HTMLElement","appendChild","insertAdjacentHTML","Vm$1","render","UA","_ua","navigator","userAgent","isWebkit","Bold","elem","class","_active","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","queryCommandState","classList","add","remove","Italic","Underline","_emptyFn","DropList","menu","opt","_this","container","title","list","onClick","ul","li","hideTimeoutId","setTimeout","hide","_rendered","_show","clearTimeout","menuELem","style","display","menuHeight","getBoundingClientRect","height","width","cssText","showTimeoutId","Head","droplist","_command","reg","cmdValue","queryCommandValue","StrikeThrough","Undo","Redo","colors","BackColor","map","color","colors$1","BackColor$1","List","textElem","selectionElem","getSelectionContainerElem","nodeName","parentNode","parent","Justify","Quote","emptyFn","_isCreatedPanelMenus","Panel","indexOf","textContainerElem","closeBtn","tabTitleContainer","tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","tabItem","content","_index","stopPropagation","index","events","event","selector","querySelector","inputs","querySelectorAll","focus","_hideOtherPanels","filter","panel","Image","_createEditPanel","_createInsertPanel","width30","width50","width100","delBtn","tabsConfig","id","img","_selectedImg","maxWidth","change","show","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","multiple","accept","fileElem","click","fileList","placeholder","url","trim","insertLinkImg","tabsConfigResult","uploadImgServer","FileReader","Video","_createPanel","textValId","btnId","val","_insert","Code","startElem","getSelectionStartElem","endElem","getSelectionEndElem","selectionText","getSelectionText","code","createRangeByElem","textId","$text","text","innerHTML","_insertCode","_updateCode","selectionELem","parentElem","MenuConstructors","bold","italic","underline","head","strikeThrough","undo","redo","foreColor","backColor","justify","quote","image","video","Menus","toolbar","menuKey","MenuConstructor","group","_addToToolbar","_bindEvent","toolbarElem","tool","getRange","tryChangeActive","Text","textContent","toStart","childNodes","last","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","saveRange","changeActive","removeEventListener","pHandle","nodeNmae","p","insertBefore","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_startOffset","startOffset","preventDefault","keyCode","txtHtml","pasteFiles","matches","Command","name","_name","_execCommand","range","Error","insertNode","deleteContents","pasteHTML","execCommand","Selection","_currentRange","_range","getSelection","rangeCount","getRangeAt","containerElem","contains","collapse","commonAncestorContainer","nodeType","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","Progress","_time","_isShow","_isRender","_timeoutId","textContainer","bar","progress","Date","now","timeoutId","_hide","UploadImg","alertInfo","debugInfo","alert","link","_this2","onload","onerror","_alert","onabort","src","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadFileName","hooks","resultFiles","errInfo","file","size","join","formdata","FormData","append","uploadImgServerArr","uploadImgServerHash","encodeURIComponent","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","ex","errno","customInsert","bind","data","setRequestHeader","send","reader","readAsDataURL","eid","Editor","toolbarSelector","textSelector","customConfig","wrap","defaultContent","contenteditable","assign","init","onChangeTimeoutId","beforeChangeHtml","onchange","isChange","currentHtml","_initDom","_initConfig","_initCommand","_initSelectionAPI","_initText","_initMenus","_initUploadImg","getElementsByTagName"],"mappings":"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","file":"seditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.SEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'list', 'justify', 'quote', 'image', 'video', 'code', 'undo', 'redo'],\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: true,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: 'http://www.daily.bookln.cn/comm/file/upload.do',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 5000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        before: function before(xhr, editor, files) {},\n        success: function success(xhr, editor, result) {},\n        fail: function fail(xhr, editor, result) {},\n        error: function error(xhr, editor) {},\n        timeout: function timeout(xhr, editor) {}\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/*\n    虚拟DOM生成器\n*/\n\nvar Vm = function () {\n    function Vm(tagName) {\n        var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        classCallCheck(this, Vm);\n\n        if (!(this.tagName = tagName)) return;\n        this.props = props;\n        this.children = children;\n    }\n\n    createClass(Vm, [{\n        key: 'render',\n        value: function render() {\n            var self = this;\n            var node = document.createElement(this.tagName),\n                props = this.props,\n                children = this.children;\n\n            for (var key in props) {\n                if (/^on[A-Za-z]/.test(key)) {\n                    var eventType = key.toLowerCase().replace('on', '');\n                    node.addEventListener(eventType, props[key], false);\n                } else {\n                    node.setAttribute(key, props[key]);\n                }\n            }\n            children.forEach(function (child) {\n                if (Array.isArray(child)) {\n                    child.forEach(function (item) {\n                        item && (item instanceof HTMLElement ? node.appendChild(item) : node.insertAdjacentHTML('beforeend', item));\n                    });\n                } else {\n                    child && (child instanceof HTMLElement ? node.appendChild(child) : node.insertAdjacentHTML('beforeend', child));\n                }\n            });\n            return node;\n        }\n    }]);\n    return Vm;\n}();\n\nvar Vm$1 = (function (tagName, props, children) {\n    return new Vm(tagName, props, children).render();\n});\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n/*\n    bold-menu\n*/\nvar Bold = function () {\n    function Bold(editor) {\n        classCallCheck(this, Bold);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-bold' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Bold, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里        \n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 bold 命令\n            editor.cmd.do('bold');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor.cmd.queryCommandState('bold')) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Bold;\n}();\n\n/*\n    italic-menu\n*/\nvar Italic = function () {\n    function Italic(editor) {\n        classCallCheck(this, Italic);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-italic' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Italic, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 italic 命令\n            editor.cmd.do('italic');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor.cmd.queryCommandState('italic')) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Italic;\n}();\n\n/*\n    underline-menu\n*/\nvar Underline = function () {\n    function Underline(editor) {\n        classCallCheck(this, Underline);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-underline' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Underline, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 underline 命令\n            editor.cmd.do('underline');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor.cmd.queryCommandState('underline')) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Underline;\n}();\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\nvar DropList = function () {\n    function DropList(menu, opt) {\n        var _this = this;\n\n        classCallCheck(this, DropList);\n\n        // droplist 所依附的菜单\n        this.menu = menu;\n        this.opt = opt;\n        // 容器\n        var container = Vm$1('div', { class: 'eui-droplist' }\n\n        // 标题\n        );var title = opt.title;\n        if (title) {\n            title.classList.add('eui-drop-title');\n            container.appendChild(title);\n        }\n\n        var list = opt.list || [];\n        var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n        var onClick = opt.onClick || _emptyFn;\n\n        // 加入 DOM 并绑定事件\n        var ul = Vm$1('ul', { class: type === 'list' ? 'eui-drop-list' : 'eui-drop-block' });\n        container.appendChild(ul);\n        list.forEach(function (item) {\n            var elem = item.elem;\n            var value = item.value;\n            var li = Vm$1('li', { class: 'eui-drop-item' });\n            if (elem) {\n                li.appendChild(elem);\n                ul.appendChild(li);\n                elem.addEventListener('click', function (e) {\n                    onClick(value\n\n                    // 隐藏\n                    );_this.hideTimeoutId = setTimeout(function () {\n                        _this.hide();\n                    }, 0);\n                });\n            }\n        }\n\n        // 绑定隐藏事件\n        );container.addEventListener('mouseleave', function (e) {\n            _this.hideTimeoutId = setTimeout(function () {\n                _this.hide();\n            }, 0);\n        }\n\n        // 记录属性\n        );this.container = container;\n\n        // 基本属性\n        this._rendered = false;\n        this._show = false;\n    }\n\n    // 显示（插入DOM）\n\n\n    createClass(DropList, [{\n        key: 'show',\n        value: function show() {\n            if (this.hideTimeoutId) {\n                // 清除之前的定时隐藏\n                clearTimeout(this.hideTimeoutId);\n            }\n\n            var menu = this.menu;\n            var menuELem = menu.elem;\n            var container = this.container;\n            if (this._show) {\n                return;\n            }\n            if (this._rendered) {\n                // 显示\n                container.style.display = 'block';\n            } else {\n                // 加入 DOM 之前先定位位置\n                var menuHeight = menuELem.getBoundingClientRect().height || 0;\n                var width = this.opt.width || 100; // 默认为 100\n                container.style.cssText = 'margin-top: ' + menuHeight + 'px; width: ' + width + 'px';\n\n                // 加入到 DOM\n                menuELem.appendChild(container);\n                this._rendered = true;\n            }\n\n            // 修改属性\n            this._show = true;\n        }\n\n        // 隐藏（移除DOM）\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            if (this.showTimeoutId) {\n                // 清除之前的定时显示\n                clearTimeout(this.showTimeoutId);\n            }\n\n            var container = this.container;\n            if (!this._show) {\n                return;\n            }\n            // 隐藏并需改属性\n            container.style.display = 'none';\n            this._show = false;\n        }\n    }]);\n    return DropList;\n}();\n\n/*\n    menu - header\n*/\nvar Head = function () {\n    function Head(editor) {\n        var _this = this;\n\n        classCallCheck(this, Head);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-heading' })]);\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            title: Vm$1('p', {}, ['设置标题']),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ elem: Vm$1('h1', {}, ['H1']), value: '<h1>' }, { elem: Vm$1('h2', {}, ['H2']), value: '<h2>' }, { elem: Vm$1('h3', {}, ['H3']), value: '<h3>' }, { elem: Vm$1('h4', {}, ['H4']), value: '<h4>' }, { elem: Vm$1('h5', {}, ['H5']), value: '<h5>' }, { elem: Vm$1('p', {}, ['正文']), value: '<p>' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 Head 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(Head, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('formatBlock', value);\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            var reg = /^h/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Head;\n}();\n\n/*\n    strikeThrough-menu\n*/\nvar StrikeThrough = function () {\n    function StrikeThrough(editor) {\n        classCallCheck(this, StrikeThrough);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-strikethrough' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(StrikeThrough, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 strikeThrough 命令\n            editor.cmd.do('strikeThrough');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor.cmd.queryCommandState('strikeThrough')) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return StrikeThrough;\n}();\n\n/*\n    undo-menu\n*/\nvar Undo = function () {\n    function Undo(editor) {\n        classCallCheck(this, Undo);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-undo' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Undo, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 undo 命令\n            editor.cmd.do('undo');\n        }\n    }]);\n    return Undo;\n}();\n\n/*\n    undo-menu\n*/\nvar Redo = function () {\n    function Redo(editor) {\n        classCallCheck(this, Redo);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-redo' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Redo, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 undo 命令\n            editor.cmd.do('redo');\n        }\n    }]);\n    return Redo;\n}();\n\n/*\n    menu - forecolor\n*/\nvar colors = ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'];\n\nvar BackColor = function () {\n    function BackColor(editor) {\n        var _this = this;\n\n        classCallCheck(this, BackColor);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-forecolor' })]);\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            title: Vm$1('p', {}, ['文字颜色']),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors.map(function (color) {\n                return {\n                    elem: Vm$1('i', { class: 'eicon eicon-forecolor', style: 'color: ' + color }),\n                    value: color\n                };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 ForeColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(BackColor, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('foreColor', value);\n        }\n    }]);\n    return BackColor;\n}();\n\n/*\n    menu - forecolor\n*/\nvar colors$1 = ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'];\n\nvar BackColor$1 = function () {\n    function BackColor(editor) {\n        var _this = this;\n\n        classCallCheck(this, BackColor);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-backcolor' })]);\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            title: Vm$1('p', {}, ['背景色']),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors$1.map(function (color) {\n                return {\n                    elem: Vm$1('i', { class: 'eicon eicon-backcolor', style: 'color:' + color }),\n                    value: color\n                };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 ForeColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(BackColor, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('backColor', value);\n        }\n    }]);\n    return BackColor;\n}();\n\n/*\n    menu - list\n*/\n// 原型\n\nvar List = function () {\n    function List(editor) {\n        var _this = this;\n\n        classCallCheck(this, List);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-insertunorderedlist' })]), this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            title: Vm$1('p', {}, ['设置列表']),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ elem: Vm$1('span', {}, [Vm$1('i', { class: 'eicon eicon-insertorderedlist' }), ' 有序列表']), value: 'insertOrderedList' }, { elem: Vm$1('span', {}, [Vm$1('i', { class: 'eicon eicon-insertunorderedlist' }), ' 无序列表']), value: 'insertUnorderedList' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 List 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(List, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            editor.selection.restoreSelection();\n            if (editor.cmd.queryCommandState(value)) {\n                return;\n            }\n            editor.cmd.do(value\n\n            // 验证列表是否被包裹在 <p> 之内\n            );var selectionElem = editor.selection.getSelectionContainerElem();\n            if (selectionElem.nodeName === 'LI') {\n                selectionElem = selectionElem.parentNode;\n            }\n            if (/^ol|ul$/i.test(selectionElem.nodeName) === false) {\n                return;\n            }\n            if (selectionElem === textElem) {\n                // 证明是顶级标签，没有被 <p> 包裹\n                return;\n            }\n            var parent = selectionElem.parentNode;\n            // parent 是顶级标签，不能删除\n            if (parent === textElem) return;\n\n            parent.parentNode.appendChild(selectionElem);\n            parent.remove();\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return List;\n}();\n\n/*\n    menu - justify\n*/\nvar Justify = function () {\n    function Justify(editor) {\n        var _this = this;\n\n        classCallCheck(this, Justify);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-justifyleft' })]);\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            title: Vm$1('p', {}, ['对齐方式']),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ elem: Vm$1('span', {}, [[Vm$1('i', { class: 'eicon eicon-justifyleft' }), ' 靠左']]), value: 'justifyLeft' }, { elem: Vm$1('span', {}, [[Vm$1('i', { class: 'eicon eicon-justifycenter' }), ' 居中']]), value: 'justifyCenter' }, { elem: Vm$1('span', {}, [[Vm$1('i', { class: 'eicon eicon-justifyright' }), ' 靠右']]), value: 'justifyRight' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 List 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(Justify, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do(value);\n        }\n    }]);\n    return Justify;\n}();\n\n/*\n    menu - quote\n*/\nvar Quote = function () {\n    function Quote(editor) {\n        classCallCheck(this, Quote);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-quotes' })]);\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Quote, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            var editor = this.editor;\n            editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            var reg = /^BLOCKQUOTE$/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Quote;\n}();\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\nvar Panel = function () {\n    function Panel(menu, opt) {\n        classCallCheck(this, Panel);\n\n        this.menu = menu;\n        this.opt = opt;\n    }\n\n    // 显示（插入DOM）\n\n\n    createClass(Panel, [{\n        key: 'show',\n        value: function show() {\n            var _this = this;\n\n            var menu = this.menu;\n            // 该菜单已经创建了 panel 不能再创建\n            if (_isCreatedPanelMenus.indexOf(menu) >= 0) return;\n\n            var editor = menu.editor;\n            var textContainerElem = editor.textContainerElem;\n            var opt = this.opt;\n\n            // panel 的容器\n            var width = opt.width || 300; // 默认 300px\n            var container = Vm$1('div', { class: 'eui-panel-wrap', style: 'width: ' + width + 'px; margin-left: ' + (0 - width) / 2 + 'px' }\n\n            // 添加关闭按钮\n            );var closeBtn = Vm$1('span', { class: 'eui-panel-close' }, [Vm$1('i', { class: 'eicon eicon-close' })]);\n            container.appendChild(closeBtn);\n            closeBtn.addEventListener('click', function () {\n                _this.hide();\n            }\n\n            // 准备 tabs 容器\n            // 设置高度\n            );var height = opt.height;\n            var tabTitleContainer = Vm$1('ul', { class: 'eui-panel-tab-title', style: height ? 'height: ' + height + 'px; overflow-y: scroll;' : '' });\n            var tabContentContainer = Vm$1('div', { class: 'eui-panel-tab-content' });\n            container.appendChild(tabTitleContainer);\n            container.appendChild(tabContentContainer\n\n            // tabs\n            );var tabs = opt.tabs || [];\n            var tabTitleArr = [];\n            var tabContentArr = [];\n            tabs.forEach(function (tab, tabIndex) {\n                if (!tab) {\n                    return;\n                }\n                var title = tab.title || '';\n                var tpl = tab.tpl || '';\n\n                // 添加到 DOM\n                var tabItem = Vm$1('li', { class: 'eui-tab-item' }, [title]);\n                tabTitleContainer.appendChild(tabItem);\n                var content = tpl;\n                tabContentContainer.appendChild(content\n\n                // 记录到内存\n                );tabItem._index = tabIndex;\n                tabTitleArr.push(tabItem);\n                tabContentArr.push(content\n\n                // 设置 active 项\n                );if (tabIndex === 0) {\n                    tabItem._active = true;\n                    tabItem.classList.add('eui-tab-active');\n                } else {\n                    content.style.display = 'none';\n                }\n\n                // 绑定 tab 的事件\n                tabItem.addEventListener('click', function (e) {\n                    if (tabItem._active) {\n                        return;\n                    }\n                    // 隐藏所有的 tab\n                    tabTitleArr.forEach(function (tabItem) {\n                        tabItem._active = false;\n                        tabItem.classList.remove('eui-tab-active');\n                    });\n                    tabContentArr.forEach(function (content) {\n                        content.style.display = 'none';\n                    }\n\n                    // 显示当前的 tab\n                    );tabItem._active = true;\n                    tabItem.classList.add('eui-tab-active');\n                    content.style.display = 'block';\n                });\n            }\n\n            // 绑定关闭事件\n            );container.addEventListener('click', function (e) {\n                // 点击时阻止冒泡\n                e.stopPropagation();\n            });\n            textContainerElem.addEventListener('click', function (e) {\n                _this.hide();\n            }\n\n            // 添加到 DOM\n            );textContainerElem.appendChild(container\n\n            // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n            );tabs.forEach(function (tab, index) {\n                if (!tab) {\n                    return;\n                }\n                var events = tab.events || [];\n                events.forEach(function (event) {\n                    var selector = event.selector;\n                    var type = event.type;\n                    var fn = event.fn || emptyFn;\n                    var content = tabContentArr[index];\n                    content.querySelector(selector).addEventListener(type, function (e) {\n                        e.stopPropagation();\n                        var needToHide = fn(e\n                        // 执行完事件之后，是否要关闭 panel\n                        );if (needToHide) {\n                            _this.hide();\n                        }\n                    });\n                });\n            }\n\n            // focus 第一个 elem\n            );var inputs = container.querySelectorAll('input[type=text],textarea');\n            if (inputs.length) {\n                inputs[0].focus();\n            }\n\n            // 添加到属性\n            this.container = container;\n\n            // 隐藏其他 panel\n            this._hideOtherPanels\n            // 记录该 menu 已经创建了 panel\n            ();_isCreatedPanelMenus.push(menu);\n        }\n\n        // 隐藏（移除DOM）\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            var menu = this.menu;\n            var container = this.container;\n            if (container) {\n                container.remove();\n            }\n\n            // 将该 menu 记录中移除\n            _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n                if (item === menu) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        }\n\n        // 一个 panel 展示时，隐藏其他 panel\n\n    }, {\n        key: '_hideOtherPanels',\n        value: function _hideOtherPanels() {\n            if (!_isCreatedPanelMenus.length) {\n                return;\n            }\n            _isCreatedPanelMenus.forEach(function (menu) {\n                var panel = menu.panel || {};\n                if (panel.hide) {\n                    panel.hide();\n                }\n            });\n        }\n    }]);\n    return Panel;\n}();\n\n/*\n    menu - img\n*/\nvar Image = function () {\n    function Image(editor) {\n        classCallCheck(this, Image);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-insertimage' })]);\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Image, [{\n        key: 'onClick',\n        value: function onClick() {\n            if (this._active) {\n                this._createEditPanel();\n            } else {\n                this._createInsertPanel();\n            }\n        }\n    }, {\n        key: '_createEditPanel',\n        value: function _createEditPanel() {\n            var editor = this.editor;\n\n            // id\n            var width30 = getRandom('width-30');\n            var width50 = getRandom('width-50');\n            var width100 = getRandom('width-100');\n            var delBtn = getRandom('del-btn'\n\n            // tab 配置\n            );var tabsConfig = [{\n                title: '编辑图片',\n                tpl: Vm$1('div', {}, [Vm$1('div', { class: 'eui-button-container', style: 'border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;' }, [Vm$1('span', { style: 'float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;' }, ['最大宽度：']), Vm$1('button', { id: width30, class: 'left' }, ['30%']), Vm$1('button', { id: width50, class: 'left' }, ['50%']), Vm$1('button', { id: width100, class: 'left' }, ['100%'])]), Vm$1('div', { class: 'eui-button-container' }, [Vm$1('button', { id: delBtn, class: 'gray left' }, ['删除图片'])])]),\n                events: [{\n                    selector: '#' + width30,\n                    type: 'click',\n                    fn: function fn() {\n                        var img = editor._selectedImg;\n                        if (img) {\n                            img.style.maxWidth = '30%';\n                            // 触发 onchange\n                            editor.change && editor.change(true);\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width50,\n                    type: 'click',\n                    fn: function fn() {\n                        var img = editor._selectedImg;\n                        if (img) {\n                            img.style.maxWidth = '50%';\n                            // 触发 onchange\n                            editor.change && editor.change(true);\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width100,\n                    type: 'click',\n                    fn: function fn() {\n                        var img = editor._selectedImg;\n                        if (img) {\n                            img.style.maxWidth = '100%';\n                            // 触发 onchange\n                            editor.change && editor.change(true);\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + delBtn,\n                    type: 'click',\n                    fn: function fn() {\n                        var img = editor._selectedImg;\n                        if (img) {\n                            img.remove();\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }];\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfig\n            });\n            panel.show\n\n            // 记录属性\n            ();this.panel = panel;\n        }\n    }, {\n        key: '_createInsertPanel',\n        value: function _createInsertPanel() {\n            var editor = this.editor;\n            var uploadImg = editor.uploadImg;\n            var config = editor.config;\n\n            // id\n            var upTriggerId = getRandom('up-trigger');\n            var upFileId = getRandom('up-file');\n            var linkUrlId = getRandom('link-url');\n            var linkBtnId = getRandom('link-btn'\n\n            // tabs 的配置\n            );var tabsConfig = [{\n                title: '上传图片',\n                tpl: Vm$1('div', { class: 'eui-up-img-container' }, [Vm$1('div', { id: upTriggerId, class: 'eui-up-btn' }, [Vm$1('i', { class: 'eicon eicon-upload' })]), Vm$1('div', { style: 'display: none;' }, [Vm$1('input', { id: upFileId, type: 'file', multiple: 'multiple', accept: 'image/jpg,image/jpeg,image/png,image/gif,image/bmp' })])]),\n                events: [{\n                    // 触发选择图片\n                    selector: '#' + upTriggerId,\n                    type: 'click',\n                    fn: function fn() {\n                        var fileElem = document.querySelector('#' + upFileId);\n                        if (fileElem) {\n                            fileElem.click();\n                        } else {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n                    }\n                }, {\n                    // 选择图片完毕\n                    selector: '#' + upFileId,\n                    type: 'change',\n                    fn: function fn() {\n                        var fileElem = document.querySelector('#' + upFileId);\n                        if (!fileElem) {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n\n                        // 获取选中的 file 对象列表\n                        var fileList = fileElem.files;\n                        if (fileList.length) {\n                            uploadImg.uploadImg(fileList);\n                        }\n\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                title: '网络图片',\n                tpl: Vm$1('div', {}, [Vm$1('input', { id: linkUrlId, type: 'text', class: 'block', placeholder: '图片链接' }), Vm$1('div', { class: 'eui-button-container' }, [Vm$1('button', { id: linkBtnId, class: 'right' }, ['插入'])])]),\n                events: [{\n                    selector: '#' + linkBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var linkUrl = document.querySelector('#' + linkUrlId);\n                        var url = linkUrl.value.trim();\n\n                        if (url) {\n                            uploadImg.insertLinkImg(url);\n                        }\n\n                        // 返回 true 表示函数执行结束之后关闭 panel\n                        return true;\n                    }\n                }] // second tab end\n            }]; // tabs end\n\n            // 判断 tabs 的显示\n            var tabsConfigResult = [];\n            if ((config.uploadImgShowBase64 || config.uploadImgServer) && window.FileReader) {\n                // 显示“上传图片”\n                tabsConfigResult.push(tabsConfig[0]);\n            }\n            if (config.showLinkImg) {\n                // 显示“网络图片”\n                tabsConfigResult.push(tabsConfig[1]);\n            }\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfigResult\n            });\n            panel.show\n\n            // 记录属性\n            ();this.panel = panel;\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            if (editor._selectedImg) {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Image;\n}();\n\n/*\n    menu - video\n*/\nvar Video = function () {\n    function Video(editor) {\n        classCallCheck(this, Video);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-insertvideo' })]), this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Video, [{\n        key: 'onClick',\n        value: function onClick() {\n            this._createPanel();\n        }\n    }, {\n        key: '_createPanel',\n        value: function _createPanel() {\n            var _this = this;\n\n            // 创建 id\n            var textValId = getRandom('text-val');\n            var btnId = getRandom('btn'\n\n            // 创建 panel\n            );var panel = new Panel(this, {\n                width: 350,\n                // 一个 panel 多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入视频',\n                    // 模板\n                    tpl: Vm$1('div', {}, [Vm$1('input', { id: textValId, type: 'text', class: 'block', placeholder: '格式如：<iframe src=... ><\\/iframe>' }), Vm$1('div', { class: 'eui-button-container' }, [Vm$1('button', { id: btnId, class: 'right' }, ['插入'])])]),\n                    // 事件绑定\n                    events: [{\n                        selector: '#' + btnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var text = document.querySelector('#' + textValId);\n                            var val = text.value.trim\n\n                            // 测试用视频地址\n                            // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                            ();if (val) {\n                                // 插入视频\n                                _this._insert(val);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // first tab end\n                }] // tabs end\n            }); // panel end\n\n            // 显示 panel\n            panel.show\n\n            // 记录属性\n            ();this.panel = panel;\n        }\n\n        // 插入视频\n\n    }, {\n        key: '_insert',\n        value: function _insert(val) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', val + '<p><br></p>');\n        }\n    }]);\n    return Video;\n}();\n\n/*\n    menu - code\n*/\nvar Code = function () {\n    function Code(editor) {\n        classCallCheck(this, Code);\n\n        this.editor = editor;\n        this.elem = Vm$1('div', { class: 'eui-menu-item' }, [Vm$1('i', { class: 'eicon eicon-insertcode' })]), this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Code, [{\n        key: 'onClick',\n        value: function onClick(e) {\n            var editor = this.editor;\n            var startElem = editor.selection.getSelectionStartElem();\n            var endElem = editor.selection.getSelectionEndElem();\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n            var selectionText = editor.selection.getSelectionText();\n            var code = void 0;\n\n            if (startElem !== endElem) {\n                // 跨元素选择，不做处理\n                editor.selection.restoreSelection();\n                return;\n            }\n            if (!isSeleEmpty) {\n                // 选取不是空，用 <code> 包裹即可\n                code = Vm$1('code', {}, [selectionText]);\n                editor.cmd.do('insertElem', code);\n                editor.selection.createRangeByElem(code, false);\n                editor.selection.restoreSelection();\n                return;\n            }\n\n            // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n            if (this._active) {\n                // 选中状态，将编辑内容\n                this._createPanel(startElem.html());\n            } else {\n                // 未选中状态，将创建内容\n                this._createPanel();\n            }\n        }\n    }, {\n        key: '_createPanel',\n        value: function _createPanel(value) {\n            var _this = this;\n\n            // value - 要编辑的内容\n            value = value || '';\n            var type = !value ? 'new' : 'edit';\n            var textId = getRandom('texxt');\n            var btnId = getRandom('btn');\n\n            var panel = new Panel(this, {\n                width: 500,\n                // 一个 Panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入代码',\n                    // 模板\n                    tpl: Vm$1('div', {}, [Vm$1('textarea', { id: textId, style: 'height: 145px;' }, [value]), Vm$1('div', { class: 'eui-button-container' }, [Vm$1('button', { id: btnId, class: 'right' }, ['插入'])])]),\n                    // 事件绑定\n                    events: [\n                    // 插入代码\n                    {\n                        selector: '#' + btnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var $text = document.querySelector('#' + textId);\n                            var text = $text.value || $text.innerHTML;\n                            text = replaceHtmlSymbol(text);\n                            if (type === 'new') {\n                                // 新插入\n                                _this._insertCode(text);\n                            } else {\n                                // 编辑更新\n                                _this._updateCode(text);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // first tab end\n                }] // tabs end\n            }); // new Panel end\n\n            // 显示 panel\n            panel.show\n\n            // 记录属性\n            ();this.panel = panel;\n        }\n\n        // 插入代码\n\n    }, {\n        key: '_insertCode',\n        value: function _insertCode(value) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n        }\n\n        // 更新代码\n\n    }, {\n        key: '_updateCode',\n        value: function _updateCode(value) {\n            var editor = this.editor;\n            var selectionELem = editor.selection.getSelectionContainerElem();\n            if (!selectionELem) {\n                return;\n            }\n            selectionELem.html(value);\n            editor.selection.restoreSelection();\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(e) {\n            var editor = this.editor;\n            var elem = this.elem;\n            var selectionELem = editor.selection.getSelectionContainerElem();\n            if (!selectionELem) {\n                return;\n            }\n            var parentElem = selectionELem.parentNode;\n            if (selectionELem.nodeName === 'CODE' && parentElem.nodeName === 'PRE') {\n                this._active = true;\n                elem.classList.add('eui-active');\n            } else {\n                this._active = false;\n                elem.classList.remove('eui-active');\n            }\n        }\n    }]);\n    return Code;\n}();\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.foreColor = BackColor;\n\nMenuConstructors.backColor = BackColor$1;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.image = Image;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.code = Code;\n\n/*\n    菜单集合\n*/\n// 修改原型\n\nvar Menus = function () {\n    function Menus(editor) {\n        classCallCheck(this, Menus);\n\n        this.editor = editor;\n        this.menus = {};\n        this.toolbar = {};\n    }\n\n    // 初始化菜单\n\n\n    createClass(Menus, [{\n        key: 'init',\n        value: function init() {\n            var _this = this;\n\n            var editor = this.editor;\n            var config = editor.config || {};\n            var configMenus = config.menus || []; // 获取配置中的菜单\n\n            // 根据配置信息，创建菜单\n            configMenus.forEach(function (menuKey) {\n                var MenuConstructor = void 0;\n                if (Array.isArray(menuKey)) {\n                    var group = [];\n                    menuKey.forEach(function (item) {\n                        MenuConstructor = MenuConstructors[item];\n                        if (MenuConstructor && typeof MenuConstructor === 'function') {\n                            // 创建单个菜单\n                            _this.menus[item] = new MenuConstructor(editor);\n                            group.push(_this.menus[item]);\n                        }\n                    });\n                    _this.toolbar[menuKey[0]] = group;\n                } else {\n                    MenuConstructor = MenuConstructors[menuKey];\n                    if (MenuConstructor && typeof MenuConstructor === 'function') {\n                        // 创建单个菜单\n                        _this.menus[menuKey] = new MenuConstructor(editor);\n                        _this.toolbar[menuKey] = _this.menus[menuKey];\n                    }\n                }\n            }\n\n            // 添加到菜单栏\n            );this._addToToolbar\n\n            // 绑定事件\n            ();this._bindEvent();\n        }\n\n        // 添加到菜单栏\n\n    }, {\n        key: '_addToToolbar',\n        value: function _addToToolbar() {\n            var editor = this.editor;\n            var toolbarElem = editor.toolbarElem;\n            var toolbar = this.toolbar;\n            objForEach(toolbar, function (key, tool) {\n                if (Array.isArray(tool)) {\n                    var group = Vm$1('div', { class: 'eui-menu-group' });\n                    tool.forEach(function (item) {\n                        group.appendChild(item.elem);\n                    });\n                    toolbarElem.appendChild(group);\n                } else {\n                    if (tool.elem) {\n                        toolbarElem.appendChild(tool.elem);\n                    }\n                }\n            });\n        }\n\n        // 绑定菜单 click mouseenter 事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            var menus = this.menus;\n            var editor = this.editor;\n            objForEach(menus, function (key, menu) {\n                var type = menu.type;\n                if (!type) return;\n\n                var elem = menu.elem;\n                var droplist = menu.droplist;\n                var panel = menu.panel;\n\n                // 点击类型，例如 bold\n                if (type === 'click' && menu.onClick) {\n                    elem.addEventListener('click', function (e) {\n                        if (editor.selection.getRange() == null) return;\n                        menu.onClick(e);\n                    });\n                }\n\n                // 下拉框，例如 head\n                if (type === 'droplist' && droplist) {\n                    elem.addEventListener('mouseenter', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 显示\n                        droplist.showTimeoutId = setTimeout(function () {\n                            droplist.show();\n                        }, 200);\n                    });\n                    elem.addEventListener('mouseleave', function (e) {\n                        // 隐藏\n                        droplist.hideTimeoutId = setTimeout(function () {\n                            droplist.hide();\n                        }, 0);\n                    });\n                }\n\n                // 弹框类型，例如 link\n                if (type === 'panel' && menu.onClick) {\n                    elem.addEventListener('click', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 在自定义事件中显示 panel\n                        menu.onClick(e);\n                    });\n                }\n            });\n        }\n\n        // 尝试修改菜单状态\n\n    }, {\n        key: 'changeActive',\n        value: function changeActive() {\n            var menus = this.menus;\n            objForEach(menus, function (key, menu) {\n                if (menu.tryChangeActive) {\n                    setTimeout(function () {\n                        menu.tryChangeActive();\n                    }, 100);\n                }\n            });\n        }\n    }]);\n    return Menus;\n}();\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e) {\n    var clipboardData = e.clipboardData || e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''\n\n    // 过滤样式\n    );pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\nvar Text = function () {\n    function Text(editor) {\n        classCallCheck(this, Text);\n\n        this.editor = editor;\n    }\n\n    // 初始化\n\n\n    createClass(Text, [{\n        key: 'init',\n        value: function init() {\n            // 绑定事件\n            this._bindEvent();\n        }\n\n        // 清空内容\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.html('<p><br></p>');\n        }\n\n        // 获取 设置 html\n\n    }, {\n        key: 'html',\n        value: function html(val) {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            if (!val) {\n                return textElem.innerHTML;\n            } else {\n                if (val.indexOf('<') !== 0) {\n                    val = '<p>' + val + '</p>';\n                }\n                textElem.innerHTML = val;\n                this.focus();\n            }\n        }\n\n        // 获取 设置 text\n\n    }, {\n        key: 'text',\n        value: function text(val) {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            if (!val) {\n                return textElem.textContent;\n            } else {\n                textElem.innerHTML = '<p>' + val + '</p>';\n                this.focus();\n            }\n        }\n\n        // 追加内容\n\n    }, {\n        key: 'append',\n        value: function append(html) {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            if (html.indexOf('<') !== 0) {\n                html = '<p>' + html + '</p>';\n            }\n            textElem.insertAdjacentHTML('beforeend', html);\n        }\n\n        // 编辑区聚焦\n\n    }, {\n        key: 'focus',\n        value: function focus(toStart) {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            var children = textElem.childNodes;\n            if (!children.length) {\n                // 如果编辑器区域无内容，添加一个空行，重新设置选区\n                textElem.appendChild(Vm$1('p', {}, [Vm$1('br')]));\n                this.focus();\n                return;\n            }\n\n            var last = children[children.length - 1];\n            editor.selection.createRangeByElem(last, !!toStart);\n            editor.selection.restoreSelection();\n        }\n\n        // 绑定事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            // 实时保存选取\n            this._saveRangeRealTime\n\n            // 按回车建时的特殊处理\n            ();this._enterKeyHandle\n\n            // 清空时保留 <p><br></p>\n            ();this._clearHandle\n\n            // 粘贴事件（粘贴文字，粘贴图片）\n            ();this._pasteHandle\n\n            // tab 特殊处理\n            ();this._tabHandle\n\n            // img 点击\n            ();this._imgHandle();\n        }\n\n        // 实时保存选取\n\n    }, {\n        key: '_saveRangeRealTime',\n        value: function _saveRangeRealTime() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n\n            // 保存当前的选区\n            function saveRange(e) {\n                // 随时保存选区\n                editor.selection.saveRange\n                // 更新按钮 ative 状态\n                ();editor.menus.changeActive();\n            }\n            // 按键后保存\n            textElem.addEventListener('keyup', saveRange);\n            textElem.addEventListener('mousedown', function (e) {\n                // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n                textElem.addEventListener('mouseleave', saveRange);\n            });\n            textElem.addEventListener('mouseup', function (e) {\n                saveRange\n                // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n                ();textElem.removeEventListener('mouseleave', saveRange);\n            });\n        }\n\n        // 按回车键时的特殊处理\n\n    }, {\n        key: '_enterKeyHandle',\n        value: function _enterKeyHandle() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            function pHandle(e) {\n                var selectionElem = editor.selection.getSelectionContainerElem();\n                var parentElem = selectionElem.parentNode;\n                // 不是顶级标签\n                if (parentElem !== textElem) return;\n\n                var nodeName = selectionElem.nodeNmae;\n                if (nodeName === 'P') {}\n                // 当前的标签是 P ，不用做处理\n\n\n                // 有内容，不做处理\n                if (selectionElem.textContent) return;\n\n                // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n                var p = Vm$1('p', {}, [Vm$1('br')]);\n                selectionElem.parentNode.insertBefore(p, selectionElem);\n                editor.selection.createRangeByElem(p, true);\n                editor.selection.restoreSelection();\n                selectionElem.remove();\n            }\n\n            textElem.addEventListener('keyup', function (e) {\n                // 不是回车键\n                if (e.keyCode !== 13) return;\n                // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n                pHandle(e);\n            }\n\n            // <pre><code></code></pre> 回车时 特殊处理\n            );function codeHandle(e) {\n                var selectionElem = editor.selection.getSelectionContainerElem();\n                if (!selectionElem) return;\n\n                var parentElem = selectionElem.parentNode;\n                var selectionNodeName = selectionElem.nodeName;\n                var parentNodeName = parentElem.nodeName;\n                // 不符合要求 忽略\n                if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') return;\n\n                // 必须原生支持 insertHTML 命令\n                if (!editor.cmd.queryCommandSupported('insertHTML')) return;\n\n                var _startOffset = editor.selection.getRange().startOffset;\n                editor.cmd.do('insertHTML', '\\n');\n                editor.selection.saveRange();\n                if (editor.selection.getRange().startOffset === _startOffset) {\n                    // 没起作用，再来一遍\n                    editor.cmd.do('insertHTML', '\\n');\n                }\n\n                // 阻止默认行为\n                e.preventDefault();\n            }\n\n            textElem.addEventListener('keydown', function (e) {\n                // 不是回车键\n                if (e.keyCode !== 13) return;\n                // <pre><code></code></pre> 回车时 特殊处理\n                codeHandle(e);\n            });\n        }\n\n        // 清空时保留 <p><br></p>\n\n    }, {\n        key: '_clearHandle',\n        value: function _clearHandle() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n\n            textElem.addEventListener('keydown', function (e) {\n                if (e.keyCode !== 8) return;\n\n                var txtHtml = textElem.innerHTML.toLowerCase().trim();\n                if (txtHtml === '<p><br></p>') {\n                    // 最后剩下一个空行，就不再删除了\n                    e.preventDefault();\n                    return;\n                }\n            });\n\n            textElem.addEventListener('keyup', function (e) {\n                if (e.keyCode !== 8) return;\n                var txtHtml = textElem.innerHTML.toLowerCase().trim\n\n                // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n                ();if (!txtHtml || txtHtml === '<br>') {\n                    // 内容空了\n                    var p = Vm$1('p', {}, [Vm$1('br')]);\n                    textElem.innerHTML = ''; // 一定要先清空，否则在 firefox 下有问题\n                    textElem.appendChild(p);\n                    editor.selection.createRangeByElem(p, false, true);\n                    editor.selection.restoreSelection();\n                }\n            });\n        }\n\n        // 粘贴事件（粘贴文字 粘贴图片）\n\n    }, {\n        key: '_pasteHandle',\n        value: function _pasteHandle() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n\n            // 粘贴文字\n            textElem.addEventListener('paste', function (e) {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault\n\n                // 获取粘贴的文字\n                ();var pasteText = void 0,\n                    pasteHtml = void 0;\n\n                var selectionElem = editor.selection.getSelectionContainerElem();\n                if (!selectionElem) return;\n                var nodeName = selectionElem.nodeName;\n\n                // code 中粘贴忽略\n                if (nodeName === 'CODE' || nodeName === 'PRE') return;\n\n                // 表格中忽略，可能会出现异常问题\n                if (nodeName === 'TD' || nodeName === 'TH') return;\n\n                if (nodeName === 'DIV' || textElem.innerHTML === '<p><br></p>') {\n                    // 是 div，可粘贴过滤样式的文字和链接\n\n                    pasteHtml = getPasteHtml(e);\n                    if (!pasteHtml) return;\n\n                    editor.cmd.do('insertHTML', pasteHtml);\n                } else {\n                    // 不是 div，证明在已有内容的元素中粘贴，只粘贴纯文本\n\n                    pasteText = getPasteText(e);\n                    if (!pasteText) return;\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                }\n            }\n\n            // 粘贴图片\n            );textElem.addEventListener('paste', function (e) {\n                e.preventDefault\n\n                // 获取粘贴的图片\n                ();var pasteFiles = getPasteImgs(e);\n                if (!pasteFiles || !pasteFiles.length) return;\n\n                // 获取当前的元素\n                var selectionElem = editor.selection.getSelectionContainerElem();\n                if (!selectionElem) return;\n\n                var nodeName = selectionElem.nodeName;\n\n                // code 中粘贴忽略\n                if (nodeName === 'CODE' || nodeName === 'PRE') return;\n\n                // 上传图片\n                var uploadImg = editor.uploadImg;\n                uploadImg.uploadImg(pasteFiles);\n            });\n        }\n\n        // tab 特殊处理\n\n    }, {\n        key: '_tabHandle',\n        value: function _tabHandle() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n\n            textElem.addEventListener('keydown', function (e) {\n                if (e.keyCode !== 9) return;\n                // 必须原生支持 insertHTML 命令\n                if (!editor.cmd.queryCommandSupported('insertHTML')) return;\n\n                var selectionElem = editor.selection.getSelectionContainerElem();\n                if (!selectionElem) return;\n\n                var parentElem = selectionElem.parentNode;\n                var selectionNodeName = selectionElem.nodeName;\n                var parentNodeName = parentElem.nodeName;\n\n                if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                    // <pre><code> 里面\n                    editor.cmd.do('insertHTML', '    ');\n                } else {\n                    // 普通文字\n                    editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n                }\n\n                e.preventDefault();\n            });\n        }\n\n        // img 点击\n\n    }, {\n        key: '_imgHandle',\n        value: function _imgHandle() {\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            var selectedClass = 'eui-selected';\n\n            // 为图片增加 selected 样式\n            textElem.addEventListener('click', function (e) {\n                if (e.target.matches('img')) {\n                    var img = e.target;\n\n                    // 去掉所有图片的 selected 样式\n                    var arr = [];\n                    arr.slice.call(textElem.querySelectorAll('img')).forEach(function (item) {\n                        item.classList.remove(selectedClass);\n                    }\n\n                    // 为点击的图片增加样式，并记录当前图片\n                    );img.classList.add(selectedClass);\n                    editor._selectedImg = img;\n\n                    // 修改选取\n                    editor.selection.createRangeByElem(img);\n                }\n            }\n\n            // 去掉图片的 selected 样式\n            );textElem.addEventListener('click', function (e) {\n                // 点击的是图片，忽略\n                if (e.target.matches('img')) return;\n                // 取消掉 selected 样式，并删除记录\n                var arr = [];\n                arr.slice.call(textElem.querySelectorAll('img')).forEach(function (item) {\n                    item.classList.remove(selectedClass);\n                });\n                editor._selectedImg = null;\n            });\n            textElem.addEventListener('keyup', function (e) {\n                // 点击的是图片，忽略\n                if (e.target.matches('img')) return;\n                // 取消掉 selected 样式，并删除记录\n                var arr = [];\n                arr.slice.call(textElem.querySelectorAll('img')).forEach(function (item) {\n                    item.classList.remove(selectedClass);\n                });\n                editor._selectedImg = null;\n            });\n        }\n    }]);\n    return Text;\n}();\n\nvar Command = function () {\n    function Command(editor) {\n        classCallCheck(this, Command);\n\n        this.editor = editor;\n    }\n\n    createClass(Command, [{\n        key: 'do',\n        value: function _do(name, value) {\n            var editor = this.editor;\n            // 如果无选区， 忽略\n            if (!editor.selection.getRange()) return;\n            // 恢复选区\n            editor.selection.restoreSelection\n            // 执行\n            ();var _name = '_' + name;\n            if (this[_name]) {\n                // 自定义事件\n                this[_name](value);\n            } else {\n                // 默认 command\n                this._execCommand(name, value);\n            }\n            // 修改菜单状态\n            editor.menus.changeActive\n\n            // 恢复选区保证光标在原来的位置闪烁 \n            ();editor.selection.saveRange();\n            editor.selection.restoreSelection\n\n            // 触发 onchange\n            ();editor.change && editor.change();\n        }\n        // 自定义 insertHTML 事件\n\n    }, {\n        key: '_insertHTML',\n        value: function _insertHTML(html) {\n            var editor = this.editor;\n            var range = editor.selection.getRange\n\n            // 保证传入的参数是 html 代码\n            ();var test = /^<.+>$/.test(html);\n            if (!test && !UA.isWebkit()) {\n                // webkit 可以插入非 html 格式的文字\n                throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式');\n            }\n            if (this.queryCommandSupported('insertHTML')) {\n                // W3C\n                this._execCommand('insertHTML', html);\n            } else if (range.insertNode) {\n                // IE\n                range.deleteContents();\n                range.insertNode(html);\n            } else if (range.pasteHTML) {\n                // IE <= 10\n                range.pasteHTML(html);\n            }\n        }\n        // 插入 elem\n\n    }, {\n        key: '_insertElem',\n        value: function _insertElem(elem) {\n            var editor = this.editor;\n            var range = editor.selection.getRange();\n\n            if (range.insertNode) {\n                range.deleteContents();\n                range.insertNode(elem[0]);\n            }\n        }\n        // 封装 execCommand\n\n    }, {\n        key: '_execCommand',\n        value: function _execCommand(name, value) {\n            document.execCommand(name, false, value);\n        }\n        // 封装 document.queryCommandValue\n\n    }, {\n        key: 'queryCommandValue',\n        value: function queryCommandValue(name) {\n            return document.queryCommandValue(name);\n        }\n\n        // 封装 document.queryCommandState\n\n    }, {\n        key: 'queryCommandState',\n        value: function queryCommandState(name) {\n            return document.queryCommandState(name);\n        }\n\n        // 封装 document.queryCommandSupported\n\n    }, {\n        key: 'queryCommandSupported',\n        value: function queryCommandSupported(name) {\n            return document.queryCommandSupported(name);\n        }\n    }]);\n    return Command;\n}();\n\nvar Selection = function () {\n    function Selection(editor) {\n        classCallCheck(this, Selection);\n\n        this.editor = editor;\n        this._currentRange = null;\n    }\n    // 获取range对象\n\n\n    createClass(Selection, [{\n        key: 'getRange',\n        value: function getRange() {\n            return this._currentRange;\n        }\n        // 保存选区\n\n    }, {\n        key: 'saveRange',\n        value: function saveRange(_range) {\n            if (_range) {\n                // 保存已有选区\n                this._currentRange = _range;\n                return;\n            }\n\n            // 获取当前的选区\n            var selection = document.getSelection();\n            if (selection.rangeCount === 0) return;\n            var range = selection.getRangeAt(0\n\n            // 判断选区内容是否在编辑内容之内\n            );var containerElem = this.getSelectionContainerElem(range);\n            if (!containerElem) return;\n            var editor = this.editor;\n            var textElem = editor.textElem;\n            if (textElem.contains(containerElem)) {\n                // 是编辑内容之内的\n                this._currentRange = range;\n            }\n        }\n\n        // 折叠选区\n\n    }, {\n        key: 'collapseRange',\n        value: function collapseRange(toStart) {\n            if (toStart == null) {\n                // 默认为 false\n                toStart = false;\n            }\n            var range = this._currentRange;\n            if (range) {\n                range.collapse(toStart);\n            }\n        }\n\n        // 选中区域的文字\n\n    }, {\n        key: 'getSelectionText',\n        value: function getSelectionText() {\n            var range = this._currentRange;\n            if (range) {\n                return this._currentRange.toString();\n            } else {\n                return '';\n            }\n        }\n\n        // 选区的 Elem\n\n    }, {\n        key: 'getSelectionContainerElem',\n        value: function getSelectionContainerElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.commonAncestorContainer;\n                return elem.nodeType === 1 ? elem : elem.parentNode;\n            }\n        }\n    }, {\n        key: 'getSelectionStartElem',\n        value: function getSelectionStartElem(_range) {\n            _range = _range || this._currentRange;\n            var elem = void 0;\n            if (_range) {\n                elem = _range.startContainer;\n                return elem.nodeType === 1 ? elem : elem.parentNode;\n            }\n        }\n    }, {\n        key: 'getSelectionEndElem',\n        value: function getSelectionEndElem(_range) {\n            _range = _range || this._currentRange;\n            var elem = void 0;\n            if (_range) {\n                elem = _range.endContainer;\n                return elem.nodeType === 1 ? elem : elem.parentNode;\n            }\n        }\n\n        // 选区是否为空\n\n    }, {\n        key: 'isSelectionEmpty',\n        value: function isSelectionEmpty() {\n            var range = this._currentRange;\n            if (range && range.startContainer) {\n                if (range.startContainer === range.endContainer) {\n                    if (range.startOffset === range.endOffset) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        // 恢复选区\n\n    }, {\n        key: 'restoreSelection',\n        value: function restoreSelection() {\n            var selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(this._currentRange);\n        }\n\n        // 创建一个空白（即 &#8203 字符）选区\n\n    }, {\n        key: 'createEmptyRange',\n        value: function createEmptyRange() {\n            var editor = this.editor;\n            var range = this.getRange();\n            var elem = void 0;\n\n            // 当前无 range\n            if (!range) return;\n            // 当前选区必须没有内容才可以\n            if (!this.isSelectionEmpty()) return;\n\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;'\n                // 修改 offset 位置\n                );range.setEnd(range.endContainer, range.endOffset + 1\n                // 存储\n                );this.saveRange(range);\n            } else {\n                elem = Vm$1('strong', {}, ['&#8203;']);\n                editor.cmd.do('insertElem', elem);\n                this.createRangeByElem(elem, true);\n            }\n        }\n\n        // 根据 Elem 设置选区\n\n    }, {\n        key: 'createRangeByElem',\n        value: function createRangeByElem(elem, toStart, isContent) {\n            // elem - 经过封装的 elem\n            // toStart - true 开始位置，false 结束位置\n            // isContent - 是否选中Elem的内容\n            if (!elem) return;\n\n            var range = document.createRange();\n\n            if (isContent) {\n                range.selectNodeContents(elem);\n            } else {\n                range.selectNode(elem);\n            }\n\n            if (typeof toStart === 'boolean') {\n                range.collapse(toStart);\n            }\n\n            // 存储 range\n            this.saveRange(range);\n        }\n    }]);\n    return Selection;\n}();\n\n/*\n    上传进度条\n*/\n\nvar Progress = function () {\n    function Progress(editor) {\n        classCallCheck(this, Progress);\n\n        this.editor = editor;\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n        this._timeoutId = 0;\n        this.textContainer = editor.textContainerElem;\n        this.bar = Vm$1('div', { class: 'eui-progress' });\n    }\n\n    createClass(Progress, [{\n        key: 'show',\n        value: function show(progress) {\n            var _this = this;\n\n            // 状态处理\n            if (this._isShow) {\n                return;\n            }\n            this._isShow = true;\n\n            // 渲染\n            var bar = this.bar;\n            if (!this._isRender) {\n                var textContainer = this.textContainer;\n                textContainer.appendChild(bar);\n            } else {\n                this._isRender = true;\n            }\n\n            // 改变进度（节流，100ms 渲染一次）\n            if (Date.now() - this._time > 100) {\n                if (progress <= 1) {\n                    bar.style.width = progress * 100 + '%';\n                    this._time = Date.now();\n                }\n            }\n\n            // 隐藏\n            var timeoutId = this._timeoutId;\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            timeoutId = setTimeout(function () {\n                _this._hide();\n            }, 500);\n        }\n    }, {\n        key: '_hide',\n        value: function _hide() {\n            var bar = this.bar;\n            bar.remove\n\n            // 修改状态\n            ();this._time = 0;\n            this._isShow = false;\n            this._isRender = false;\n        }\n    }]);\n    return Progress;\n}();\n\n/*\n    上传图片\n*/\n\nvar UploadImg = function () {\n    function UploadImg(editor) {\n        classCallCheck(this, UploadImg);\n\n        this.editor = editor;\n    }\n\n    // 根据 debug 弹出不同的信息\n\n\n    createClass(UploadImg, [{\n        key: '_alert',\n        value: function _alert(alertInfo, debugInfo) {\n            var editor = this.editor;\n            var debug = editor.config.debug;\n\n            if (debug) {\n                throw new Error('SEditor: ' + (debugInfo || alertInfo));\n            } else {\n                alert(alertInfo);\n            }\n        }\n\n        // 根据链接插入图片\n\n    }, {\n        key: 'insertLinkImg',\n        value: function insertLinkImg(link) {\n            var _this2 = this;\n\n            if (!link) {\n                return;\n            }\n            var editor = this.editor;\n\n            var img = document.createElement('img');\n            img.onload = function () {\n                img = null;\n                editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n            };\n            img.onerror = function () {\n                img = null;\n                // 无法成功下载图片\n                _this2._alert('插入图片错误', 'SEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n                return;\n            };\n            img.onabort = function () {\n                img = null;\n            };\n            img.src = link;\n        }\n\n        // 上传图片\n\n    }, {\n        key: 'uploadImg',\n        value: function uploadImg(files) {\n            var _this3 = this;\n\n            if (!files || !files.length) {\n                return;\n            }\n\n            // ------------------------------ 获取配置信息 ------------------------------\n            var editor = this.editor;\n            var config = editor.config;\n            var maxSize = config.uploadImgMaxSize;\n            var maxSizeM = maxSize / 1000 / 1000;\n            var maxLength = config.uploadImgMaxLength || 10000;\n            var uploadImgServer = config.uploadImgServer;\n            var uploadImgShowBase64 = config.uploadImgShowBase64;\n            var uploadFileName = config.uploadFileName || '';\n            var uploadImgParams = config.uploadImgParams || {};\n            var uploadImgHeaders = config.uploadImgHeaders || {};\n            var hooks = config.uploadImgHooks || {};\n            var timeout = config.uploadImgTimeout || 3000;\n            var withCredentials = config.withCredentials;\n            if (withCredentials == null) {\n                withCredentials = false;\n            }\n\n            // ------------------------------ 验证文件信息 ------------------------------\n            var resultFiles = [];\n            var errInfo = [];\n            arrForEach(files, function (file) {\n                var name = file.name;\n                var size = file.size;\n                if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                    // 后缀名不合法，不是图片\n                    errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                    return;\n                }\n                if (maxSize < size) {\n                    // 上传图片过大\n                    errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                    return;\n                }\n\n                // 验证通过的加入结果列表\n                resultFiles.push(file);\n            }\n            // 抛出验证信息\n            );if (errInfo.length) {\n                this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n                return;\n            }\n            if (resultFiles.length > maxLength) {\n                this._alert('一次最多上传' + maxLength + '张图片');\n                return;\n            }\n\n            // 添加图片数据\n            var formdata = new FormData();\n            arrForEach(resultFiles, function (file) {\n                var name = uploadFileName || file.name;\n                formdata.append(name, file);\n            }\n\n            // ------------------------------ 上传图片 ------------------------------\n            );if (uploadImgServer && typeof uploadImgServer === 'string') {\n                // 添加参数\n                var uploadImgServerArr = uploadImgServer.split('#');\n                uploadImgServer = uploadImgServerArr[0];\n                var uploadImgServerHash = uploadImgServerArr[1] || '';\n                objForEach(uploadImgParams, function (key, val) {\n                    val = encodeURIComponent(val\n\n                    // 第一，将参数拼接到 url 中\n                    );if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n\n                    // 第二，将参数添加到 formdata 中\n                    formdata.append(key, val);\n                });\n                if (uploadImgServerHash) {\n                    uploadImgServer += '#' + uploadImgServerHash;\n                }\n\n                // 定义 xhr\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', uploadImgServer\n\n                // 设置超时\n                );xhr.timeout = timeout;\n                xhr.ontimeout = function () {\n                    // hook - timeout\n                    if (hooks.timeout && typeof hooks.timeout === 'function') {\n                        hooks.timeout(xhr, editor);\n                    }\n\n                    _this3._alert('上传图片超时');\n                };\n\n                // 监控 progress\n                if (xhr.upload) {\n                    xhr.upload.onprogress = function (e) {\n                        var percent = void 0;\n                        // 进度条\n                        var progressBar = new Progress(editor);\n                        if (e.lengthComputable) {\n                            percent = e.loaded / e.total;\n                            progressBar.show(percent);\n                        }\n                    };\n                }\n\n                // 返回数据\n                xhr.onreadystatechange = function () {\n                    var result = void 0;\n                    if (xhr.readyState === 4 && xhr.status === 200) {\n                        if (xhr.status !== 200) {\n                            // hook - error\n                            if (hooks.error && typeof hooks.error === 'function') {\n                                hooks.error(xhr, editor);\n                            }\n\n                            // xhr 返回状态错误\n                            _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                            return;\n                        }\n\n                        result = xhr.responseText;\n                        if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                            try {\n                                result = JSON.parse(result);\n                            } catch (ex) {\n                                // hook - fail\n                                if (hooks.fail && typeof hooks.fail === 'function') {\n                                    hooks.fail(xhr, editor, result);\n                                }\n\n                                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                                return;\n                            }\n                        }\n                        if (result.errno != '0') {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            // 数据错误\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                        } else {\n                            if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                                // 使用者自定义插入方法\n                                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                            } else {\n                                // 将图片插入编辑器\n                                var data = result.data || [];\n                                data.forEach(function (link) {\n                                    _this3.insertLinkImg(link);\n                                });\n                            }\n\n                            // hook - success\n                            if (hooks.success && typeof hooks.success === 'function') {\n                                hooks.success(xhr, editor, result);\n                            }\n                        }\n                    }\n                };\n\n                // hook - before\n                if (hooks.before && typeof hooks.before === 'function') {\n                    hooks.before(xhr, editor, resultFiles);\n                }\n\n                // 自定义 headers\n                objForEach(uploadImgHeaders, function (key, val) {\n                    xhr.setRequestHeader(key, val);\n                }\n\n                // 跨域传 cookie\n                );xhr.withCredentials = withCredentials;\n\n                // 发送请求\n                xhr.send(formdata\n\n                // 注意，要 return 。不去操作接下来的 base64 显示方式\n                );return;\n            }\n\n            // 显示 base64 格式\n            if (uploadImgShowBase64) {\n                arrForEach(files, function (file) {\n                    var _this = _this3;\n                    var reader = new FileReader();\n                    reader.readAsDataURL(file);\n                    reader.onload = function () {\n                        _this.insertLinkImg(this.result);\n                    };\n                });\n            }\n        }\n    }]);\n    return UploadImg;\n}();\n\nvar eid = 1;\n\nvar Editor = function () {\n    function Editor(toolbarSelector, textSelector) {\n        classCallCheck(this, Editor);\n\n        if (!toolbarSelector) {\n            // 没有传入任何参数，报错\n            throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n        }\n        // id，用以区分单个页面不同的编辑器对象\n        this.id = 'SEditor-' + eid++;\n\n        this.toolbarSelector = toolbarSelector;\n        this.textSelector = textSelector;\n\n        // 自定义配置\n        this.customConfig = {};\n    }\n\n    createClass(Editor, [{\n        key: '_initDom',\n        value: function _initDom() {\n            var _this = this;\n\n            var toolbarSelector = this.toolbarSelector;\n            var textSelector = this.textSelector;\n            var wrap = document.querySelector(toolbarSelector\n\n            // 定义变量\n            );var toolbarElem = void 0,\n                textContainerElem = void 0,\n                textElem = void 0,\n                defaultContent = void 0;\n\n            if (!textSelector) {\n                // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n                toolbarElem = Vm$1('div', { class: 'eui-toolbar', style: 'background-color: #f1f1f1; border: 1px solid #ccc' });\n                textContainerElem = Vm$1('div', { class: 'eui-container', style: 'border: 1px solid #ccc; border-top: none; height: 300px' }\n                // 将编辑器区域原有的内容，暂存起来\n                );defaultContent = wrap.innerHTML;\n                wrap.innerHTML = '';\n\n                // 添加到 DOM 结构中\n                wrap.appendChild(toolbarElem);\n                wrap.appendChild(textContainerElem);\n            } else {\n                // toolbar 和 text 的选择器都有值，记录属性\n                toolbarElem = document.querySelector(toolbarSelector);\n                toolbarElem.classList.add('eui-toolbar');\n                textContainerElem = document.querySelector(textSelector);\n                textContainerElem.classList.add('eui-container'\n                // 将编辑器区域原有的内容，暂存起来\n                );defaultContent = textContainerElem.innerHTML;\n                textContainerElem.innerHTML = '';\n            }\n\n            // 编辑区域\n            textElem = Vm$1('div', { class: 'eui-content', style: 'width: 100%; height: 100%;', contenteditable: true }\n\n            // 初始化编辑区域内容\n            );if (defaultContent) {\n                if (defaultContent.indexOf('<') !== 0) {\n                    defaultContent = '<p>' + defaultContent + '</p>';\n                }\n                textElem.innerHTML = defaultContent;\n            } else {\n                textElem.appendChild(Vm$1('p', {}, [Vm$1('br')]));\n            }\n\n            // 编辑区域加入DOM\n            textContainerElem.appendChild(textElem\n\n            // 记录属性\n            );this.toolbarElem = toolbarElem;\n            this.textContainerElem = textContainerElem;\n            this.textElem = textElem;\n\n            // 绑定 onchange\n            textContainerElem.addEventListener('click', function () {\n                _this.change && _this.change();\n            });\n            textContainerElem.addEventListener('keyup', function () {\n                _this.change && _this.change();\n            });\n            toolbarElem.addEventListener('click', function () {\n                _this.change && _this.change();\n            });\n        }\n\n        // 初始化配置\n\n    }, {\n        key: '_initConfig',\n        value: function _initConfig() {\n            // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n            this.config = Object.assign({}, config, this.customConfig);\n        }\n\n        // 封装 command\n\n    }, {\n        key: '_initCommand',\n        value: function _initCommand() {\n            this.cmd = new Command(this);\n        }\n\n        // 封装 selection range API\n\n    }, {\n        key: '_initSelectionAPI',\n        value: function _initSelectionAPI() {\n            this.selection = new Selection(this);\n        }\n\n        // 添加图片上传\n\n    }, {\n        key: '_initUploadImg',\n        value: function _initUploadImg() {\n            this.uploadImg = new UploadImg(this);\n        }\n\n        // 初始化菜单\n\n    }, {\n        key: '_initMenus',\n        value: function _initMenus() {\n            this.menus = new Menus(this);\n            this.menus.init();\n        }\n\n        // 添加 text 区域\n\n    }, {\n        key: '_initText',\n        value: function _initText() {\n            this.content = new Text(this);\n            this.content.init();\n        }\n\n        // 绑定事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            // -------- 绑定 onchange 事件 --------\n            var onChangeTimeoutId = 0;\n            var beforeChangeHtml = this.content.html();\n            var config$$1 = this.config;\n            var onchange = config$$1.onchange;\n            if (onchange && typeof onchange === 'function') {\n                // 触发 change 的有三个场景：\n                // 1. textContainerElem event 'click keyup'\n                // 2. toolbarElem.event 'click'\n                // 3. editor.cmd.do()\n                this.change = function (isChange) {\n                    var _this2 = this;\n\n                    // 判断是否有变化\n                    var currentHtml = this.content.html\n                    // 如果指定改变，则不必判断 应用场景：比如图片改变宽度值\n                    ();if (!isChange && currentHtml.length === beforeChangeHtml.length) return;\n\n                    // 执行，使用节流\n                    if (onChangeTimeoutId) {\n                        clearTimeout(onChangeTimeoutId);\n                    }\n                    onChangeTimeoutId = setTimeout(function () {\n                        // 触发配置的 onchange 函数\n                        onchange(currentHtml, _this2);\n                        beforeChangeHtml = currentHtml;\n                    }, 200);\n                };\n            }\n        }\n\n        // 创建编辑器\n\n    }, {\n        key: 'create',\n        value: function create() {\n            // 初始化 DOM\n            this._initDom\n\n            // 初始化配置信息\n            ();this._initConfig\n\n            // 封装 command API\n            ();this._initCommand\n\n            // 封装 selection range API\n            ();this._initSelectionAPI\n\n            // 添加 text\n            ();this._initText\n\n            // 初始化菜单\n            ();this._initMenus\n\n            // 添加 图片上传\n            ();this._initUploadImg\n\n            // 选区聚焦\n            ();this.content.focus\n\n            // 绑定事件\n            ();this._bindEvent();\n        }\n    }]);\n    return Editor;\n}();\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.eui-content:focus,.eui-panel-wrap .eui-panel-tab-content button:focus,.eui-panel-wrap .eui-panel-tab-content input:focus,.eui-panel-wrap .eui-panel-tab-content textarea:focus{outline:0}.eui-container,.eui-menu-panel,.eui-toolbar{font-family:\"Helvetica Neue\",Helvetica,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",\"微软雅黑\",Arial,sans-serif;font-size:14px;padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}.eui-container *,.eui-menu-panel *,.eui-toolbar *{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}.eui-menu-item .eui-droplist{position:absolute;left:0;top:0;background-color:#fff;border:1px solid #f1f1f1;border-right-color:#ccc;border-bottom-color:#ccc}.eui-menu-item .eui-droplist ul.eui-drop-block li.eui-drop-item:hover,.eui-menu-item .eui-droplist ul.eui-drop-list li.eui-drop-item:hover{background-color:#f1f1f1}.eui-menu-item .eui-droplist .eui-drop-title{text-align:center;color:#999;line-height:2;border-bottom:1px solid #f1f1f1;font-size:13px}.eui-menu-item .eui-droplist ul.eui-drop-list{list-style:none;line-height:1}.eui-menu-item .eui-droplist ul.eui-drop-list li.eui-drop-item{line-height:1.5;color:#333;padding:5px 0}.eui-menu-item .eui-droplist ul.eui-drop-block{list-style:none;text-align:left;padding:5px}.eui-menu-item .eui-droplist ul.eui-drop-block li.eui-drop-item{display:inline-block;padding:3px 5px}@font-face{font-family:iconfont;src:url(data:application/x-font-ttf;charset=utf-8;base64,) format(\\'truetype\\')}.eicon{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.eicon-quotes:before{content:\"\\\\e60b\"}.eicon-justifycenter:before{content:\"\\\\e601\"}.eicon-justifyfull:before{content:\"\\\\e602\"}.eicon-justifyright:before{content:\"\\\\e603\"}.eicon-code:before{content:\"\\\\e612\"}.eicon-upload:before{content:\"\\\\e618\"}.eicon-justifyleft:before{content:\"\\\\e604\"}.eicon-indent:before{content:\"\\\\e611\"}.eicon-outdent:before{content:\"\\\\e613\"}.eicon-createlink:before{content:\"\\\\e608\"}.eicon-insertcode:before{content:\"\\\\e61a\"}.eicon-bold:before{content:\"\\\\e60a\"}.eicon-italic:before{content:\"\\\\e605\"}.eicon-underline:before{content:\"\\\\e606\"}.eicon-undo:before{content:\"\\\\e614\"}.eicon-insertimage:before{content:\"\\\\e60c\"}.eicon-insertvideo:before{content:\"\\\\e60d\"}.eicon-close:before{content:\"\\\\e79e\"}.eicon-math:before{content:\"\\\\e61d\"}.eicon-insertunorderedlist:before{content:\"\\\\e60e\"}.eicon-fontname:before{content:\"\\\\e607\"}.eicon-backcolor:before{content:\"\\\\e615\"}.eicon-forecolor:before{content:\"\\\\e743\"}.eicon-resize:before{content:\"\\\\e61b\"}.eicon-removeformat:before{content:\"\\\\e609\"}.eicon-redo:before{content:\"\\\\e616\"}.eicon-fontsize:before{content:\"\\\\e619\"}.eicon-heading:before{content:\"\\\\e60f\"}.eicon-insertorderedlist:before{content:\"\\\\e610\"}.eicon-strikethrough:before{content:\"\\\\e600\"}.eicon-h1:before{content:\"\\\\e61c\"}.eicon-h2:before{content:\"\\\\e61e\"}.eicon-h3:before{content:\"\\\\e61f\"}.eicon-h4:before{content:\"\\\\e620\"}.eui-toolbar{display:-webkit-box;display:-ms-flexbox;display:flex;padding:0 5px}.eui-toolbar .eui-menu-group{display:-webkit-box;display:-ms-flexbox;display:flex;background:#f9f9f9;border:1px solid #f2f2f2;border-radius:5px}.eui-toolbar .eui-menu-group:not(:last-child){margin-right:10px}.eui-toolbar .eui-menu-group .eui-menu-item:hover{background:#f2f2f2}.eui-toolbar .eui-menu-group .eui-menu-item:hover i{color:#999}.eui-toolbar .eui-menu-group .eui-menu-item:not(:last-child){border-right:1px solid #f2f2f2}.eui-toolbar .eui-menu-group .eui-active i,.eui-toolbar .eui-menu-group .eui-active:hover i{color:#1e88e5}.eui-toolbar .eui-menu-item{position:relative;z-index:10001;text-align:center;padding:4px 8px;cursor:pointer}.eui-toolbar .eui-menu-item i{font-size:14px;color:#999}.eui-toolbar .eui-menu-item:hover i{color:#333}.eui-toolbar .eui-active i,.eui-toolbar .eui-active:hover i{color:#1e88e5}.eui-panel-wrap{position:absolute;top:0;left:50%;border:1px solid #ccc;border-top:0;-webkit-box-shadow:1px 1px 2px #ccc;box-shadow:1px 1px 2px #ccc;color:#333;background-color:#fff}.eui-panel-wrap .eui-panel-close{position:absolute;right:0;top:0;padding:5px;margin:2px 5px 0 0;cursor:pointer;color:#999}.eui-panel-wrap .eui-panel-close:hover{color:#333}.eui-panel-wrap .eui-panel-close .eicon{font-size:12px;font-weight:700}.eui-panel-wrap .eui-panel-tab-title{list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;margin:2px 10px 0;border-bottom:1px solid #f1f1f1}.eui-panel-wrap .eui-panel-tab-title .eui-tab-item{padding:3px 5px;color:#999;cursor:pointer;margin:0 3px;position:relative;top:1px}.eui-panel-wrap .eui-panel-tab-title .eui-tab-active{color:#333;border-bottom:1px solid #333;cursor:default;font-weight:700}.eui-panel-wrap .eui-panel-tab-content{padding:10px 15px;font-size:16px}.eui-panel-wrap .eui-panel-tab-content textarea{width:100%;border:1px solid #ccc;padding:5px}.eui-panel-wrap .eui-panel-tab-content textarea:focus{border-color:#1e88e5}.eui-panel-wrap .eui-panel-tab-content input[type=text]{border:none;border-bottom:1px solid #ccc;font-size:14px;height:20px;color:#333;padding:10px 5px;text-align:left}.eui-panel-wrap .eui-panel-tab-content input[type=text].small{width:30px;text-align:center}.eui-panel-wrap .eui-panel-tab-content input[type=text].block{display:block;width:100%;margin:10px 0}.eui-panel-wrap .eui-panel-tab-content input[type=text]:focus{border-bottom:2px solid #1e88e5}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button{font-size:14px;color:#1e88e5;border:none;padding:5px 10px;background-color:#fff;cursor:pointer;border-radius:3px}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button.left{float:left;margin-right:10px}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button.right{float:right;margin-left:10px}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button.gray{color:#999}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button.red{color:#c24f4a}.eui-panel-wrap .eui-panel-tab-content .eui-button-container button:hover{background-color:#f1f1f1}.eui-panel-wrap .eui-panel-tab-content .eui-button-container:after{content:\"\";display:table;clear:both}.eui-panel-wrap .eui-up-img-container{text-align:center}.eui-panel-wrap .eui-up-img-container .eui-up-btn{display:inline-block;color:#999;cursor:pointer;line-height:1;padding:6px 0;-webkit-transition:all .3s;transition:all .3s}.eui-panel-wrap .eui-up-img-container .eui-up-btn:hover{color:#333}.eui-panel-wrap .eui-up-img-container .eui-up-btn .eicon{font-size:60px}.eui-container{position:relative;z-index:10000}.eui-container .eui-progress{position:absolute;background-color:#1e88e5;bottom:0;left:0;height:1px}.eui-content{padding:0 10px;overflow-y:scroll}.eui-content h1,.eui-content h2,.eui-content h3,.eui-content h4,.eui-content h5,.eui-content p,.eui-content pre,.eui-content table{margin:10px 0;line-height:1.5}.eui-content ol,.eui-content ul{margin:10px 0 10px 20px}.eui-content blockquote{display:block;border-left:8px solid #d0e5f2;padding:5px 10px;margin:10px 0;line-height:1.4;font-size:100%;background-color:#f1f1f1}.eui-content code{display:inline-block;background-color:#f1f1f1;border-radius:3px;padding:3px 5px;margin:0 3px}.eui-content pre code{display:block}.eui-content table{border-top:1px solid #ccc;border-left:1px solid #ccc}.eui-content table td,.eui-content table th{border-bottom:1px solid #ccc;border-right:1px solid #ccc;padding:3px 5px}.eui-content table th{border-bottom:2px solid #ccc;text-align:center}.eui-content img{cursor:pointer}.eui-content img:hover{-webkit-box-shadow:0 0 5px #333;box-shadow:0 0 5px #333}.eui-content img.eui-selected{border:2px solid #1e88e5}.eui-content img.eui-selected:hover{-webkit-box-shadow:none;box-shadow:none}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style\n\n// 返回\n);var index = window.SEditor || Editor;\n\nreturn index;\n\n})));\n"]}